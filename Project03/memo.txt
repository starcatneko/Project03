"メモのメモ"
タグの説明
 ##		項目名
 $$		復習
 **		やることメモ

 **宿題0913
 シングルトンをGameTaskの形に（デストラクタのPrivate化、Destroy、Create削除）

 ##デストラクタのprivate化
	デストラクタをprivateに書くことで、
	「このクラスを消さないでほしい」という意図を
	表現することができる。
	プログラムの書き方で意思を伝えることが大事

 ##default deleter
	通常はデストラクタ
	unique_ptrの省略可能な第二引数
	デストラクタをprivateで書く場合、
	deleterを作らなければならない
	unique_ptrの第二引数に渡すdeleterは、
	関数オブジェクトで作成する

## 関数オブジェクト
調べよ

## autoとitr
<list>
 |-(itr) -> データ
 |-(itr) -> データ
 |-(itr) -> データ

auto k = piecelist.bigin();
	auto はlistのitrになる
	（型に対して auto)

auto l:piecelist;
	auto はデータになる
	(list全体に対して auto)

	list自体を扱いたい場合は
	前者の書き方じゃないとダメ



リストじゃあああああああ
LRを参照

GameBoard
クリックされた場所をもとに盤面に駒を置く
駒が置かれたら駒のクラス(GamePiece)をインスタンス

置かれた駒が特殊駒だった場合、さらに特殊駒のクラス(GamePiece)を
同じ位置にインスタンスする。

GamePiece
GameBoardにGamePieceのリストを作成する
インスタンスされたらGamePieceのリストにpushする

**隣接する駒を検索する関数つくる


GameBoard
↓
GamePiece
↓
Piece→個別Pieceクラス

=========
→ : 継承

隣接する駒の検索および反転はGameBoardクラスで行うのがよい？